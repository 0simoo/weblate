---
kind: pipeline
name: lint

clone:
  depth: 100

steps:
- name: flake8
  image: python:3.7
  commands:
  - pip install -r requirements-lint.txt
  - flake8
- name: sdist
  image: python:3.7
  commands:
  - pip install -r requirements-lint.txt
  - ./setup.py sdist
  - twine check dist/*

---
kind: pipeline
name: docs

clone:
  depth: 100

steps:
- name: docs
  image: python:3.7
  commands:
  - apt update
  - apt install -y graphviz
  - pip install -r docs/requirements.txt
  - make -C docs html SPHINXOPTS='-n -W -a'
---
kind: pipeline
name: tests

clone:
  depth: 100

services:
- name: postgres
  image: postgres:11-alpine
  ports:
  - 5432
  environment:
    POSTGRES_USER: postgres
    POSTGRES_DB: weblate

steps:
- name: test
  image: python:3.5
  environment:
    LANG: C.UTF-8
    LC_ALL: C.UTF-8
    DJANGO_SETTINGS_MODULE: weblate.settings_test
    CI_DATABASE: postgresql
  commands:
  - apt update
  - apt install -y git-svn  libcairo-dev gir1.2-pango-1.0 libgirepository1.0-dev libenchant1c2a g++ libtesseract-dev libleptonica-dev tesseract-ocr-eng gettext locales
  - pip install  psycopg2-binary
  - pip install -r requirements-optional.txt -r requirements-test.txt -r docs/requirements.txt
  - ./manage.py collectstatic --noinput
  - ./manage.py list_versions
  - ./manage.py compilemessages
  - ./manage.py test
---
kind: pipeline
name: migrations

clone:
  depth: 100

services:
- name: postgres
  image: postgres:11-alpine
  ports:
  - 5432
  environment:
    POSTGRES_USER: postgres
    POSTGRES_DB: weblate
- name: mysql
  image: mysql
  command: ["--default-authentication-plugin=mysql_native_password"]
  ports:
  - 3306
  environment:
    MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    MYSQL_DATABASE: weblate

steps:
- name: test
  image: python:3.5
  environment:
    LANG: C
    LC_ALL: C
    DJANGO_SETTINGS_MODULE: weblate.settings_test
  commands:
  - apt update
  - apt install -y git-svn libcairo-dev gir1.2-pango-1.0 libgirepository1.0-dev libenchant1c2a g++ libtesseract-dev libleptonica-dev tesseract-ocr-eng gettext locales
  - pip install 'Django>=2.1,<2.2' psycopg2-binary mysqlclient
  - pip install -r requirements-optional.txt -r requirements-test.txt -r docs/requirements.txt
  - ./ci/run-migrate
...
