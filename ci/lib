# shell library to help executing tests

set -x
coverage erase

check() {
    RET=$?
    if [ $RET -ne 0 ] ; then
        exit $RET
    fi
}

run_coverage() {
    # PendingDeprecationWarning is needed as long as we support Django 1.11
    python -W default -W ignore:unclosed:ResourceWarning -W ignore::PendingDeprecationWarning -m coverage run --source . --append "$@"
}

cleanup_database() {
    rm -f weblate.db

    if [ $CI_DATABASE = "mysql" ] ; then
        mysql --host=$CI_DB_HOST -e 'SET GLOBAL character_set_server=utf8' -uroot
        mysql --host=$CI_DB_HOST -e 'SET GLOBAL collation_server=utf8_general_ci' -uroot
        mysql --host=$CI_DB_HOST -e 'DROP DATABASE IF EXISTS weblate;' -uroot
        mysql --host=$CI_DB_HOST -e 'CREATE DATABASE weblate CHARACTER SET utf8 COLLATE utf8_general_ci;' -uroot
    fi

    if [ $CI_DATABASE = "postgresql" ] ; then
        if [ -n "$CI_DB_PASSWORD" ] ; then
            export PGPASSWORD="$CI_DB_PASSWORD"
        fi
        psql --host=$CI_DB_HOST -c 'DROP DATABASE IF EXISTS weblate;' -U postgres
        psql --host=$CI_DB_HOST -c 'CREATE DATABASE weblate;' -U postgres
    fi
}
